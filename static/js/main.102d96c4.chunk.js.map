{"version":3,"sources":["images/github.png","images/linkedin.png","components/Configuracao.jsx","components/Feedback.jsx","components/Footer.jsx","data/index.js","redux/actions/index.js","components/Header.jsx","components/Perguntas.jsx","components/Jogo.jsx","components/LoginScreen.jsx","components/Ranking.jsx","App.js","serviceWorker.js","redux/reducers/player.js","redux/reducers/token.js","redux/reducers/perguntas.js","redux/reducers/index.js","redux/store/index.js","index.js"],"names":["module","exports","Configuracao","data-testid","Component","Feedback","msgFeedback","props","acertos","setState","msg","saveStorage","nome","pontuacao","arrayRanking","objRanking","name","score","picture","convertEmail","JSON","parse","localStorage","getItem","console","log","push","setItem","stringify","state","bind","this","email","hash","md5","toString","className","src","alt","to","connect","player","assertions","gravatarEmail","Footer","target","github","linkedin","INITIAL_STATE","respostas","timeLeft","timeOver","indice","dificuldade","acertou","errou","mostrarBotaoNext","proximaPergunta","showFeedback","total","getPerguntas","json","type","payload","getToken","fetchPerguntas","token","dispatch","a","fetch","response","response_code","response1","json1","res1","final","Header","url","Perguntas","acerto","setRespTrue","erro","setRespFalse","map","resp","i","keys","Object","values","onClick","key","disabled","replace","Jogo","calc","buscarPerguntas","defineDificuldade","perguntas","difficulty","arrayTrueFalse","index","accPergunts","res","list","correct_answer","incorrect_answers","forEach","incorrect","pos","sort","Math","random","element","splice","arrayRespostas","timerFunction","myInterval","setInterval","prev","clearInterval","correctAnswer","prevState","adicionaClasseAcerto","adicionaClasseErro","nextQuestion","prevsate","exibirFeedback","history","_prevProps","updatePontuacao","category","question","results","LoginScreen","handleChange","value","loginVerifiyer","includesAt","includes","includesCom","verifyName","length","logar","zerarAcertos","getEmailName","placeholder","onChange","getEmailNome","Ranking","App","path","component","Boolean","window","location","hostname","match","action","rootReducer","combineReducers","require","store","createStore","composeWithDevTools","applyMiddleware","thunk","Cypress","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.102d96c4.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/github.ccadf543.png\";","module.exports = __webpack_public_path__ + \"static/media/linkedin.5bb3ed2b.png\";","import React, { Component } from 'react';\n\nclass Configuracao extends Component {\n  render() {\n    return <h1 data-testid=\"settings-title\">Configuração</h1>;\n  }\n}\n\nexport default Configuracao;\n","import React, { Component } from 'react';\nimport md5 from 'crypto-js/md5';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\n\nconst NUMBER_3 = 3;\n\nclass Feedback extends Component {\n  constructor() {\n    super();\n    this.state = {\n      msg: '',\n    };\n    this.convertEmail = this.convertEmail.bind(this);\n  }\n\n  componentDidMount() {\n    this.msgFeedback();\n    this.saveStorage();\n  }\n\n  msgFeedback = () => {\n    const { acertos } = this.props;\n    if (acertos < NUMBER_3) {\n      this.setState({ msg: 'Could be better...' });\n    } else {\n      this.setState({ msg: 'Well Done!' });\n    }\n  };\n\n  saveStorage = (nome, pontuacao) => {\n    const url = this.convertEmail();\n    const arrayRanking = [];\n    const objRanking = {\n      name: nome,\n      score: pontuacao,\n      picture: url,\n    };\n    const itens = JSON.parse(localStorage.getItem('ranking'));\n\n    if (!itens) {\n      console.log('diferente');\n      arrayRanking.push(objRanking);\n      localStorage.setItem('ranking', JSON.stringify(arrayRanking));\n    }\n  };\n\n  convertEmail() {\n    const { email } = this.props;\n    const hash = md5(email).toString();\n    const url = `https://www.gravatar.com/avatar/${hash}`;\n    // this.setState({ url });\n    return url;\n  }\n\n  render() {\n    const { nome, pontuacao, acertos } = this.props;\n    const { msg } = this.state;\n    this.saveStorage(nome, pontuacao);\n    return (\n      <header className=\"ranking\">\n        <h2>Results</h2>\n        <div>\n          <img\n            data-testid=\"header-profile-picture\"\n            src={ this.convertEmail() }\n            alt={ nome }\n          />\n          <span data-testid=\"header-player-name\">{nome}</span>\n        </div>\n        <h3 data-testid=\"header-score\">\n          Points\n          <b>{pontuacao}</b>\n        </h3>\n        <h3 data-testid=\"feedback-total-question\">\n          Hits\n          <b>{acertos}</b>\n        </h3>\n        <h2 data-testid=\"feedback-text\">{msg}</h2>\n        <div className=\"links\">\n          <Link to=\"/\" data-testid=\"btn-play-again\">\n            Play Again\n          </Link>\n          {/* <Link className='config' data-testid='btn-ranking' to='/ranking'>\n            Ranking\n          </Link> */}\n        </div>\n      </header>\n    );\n  }\n}\n\nFeedback.propTypes = {\n  acertos: PropTypes.number.isRequired,\n  email: PropTypes.string.isRequired,\n  nome: PropTypes.number.isRequired,\n  pontuacao: PropTypes.number.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  acertos: state.player.assertions,\n  nome: state.player.name,\n  email: state.player.gravatarEmail,\n  pontuacao: state.player.score,\n});\n\nexport default connect(mapStateToProps)(Feedback);\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport github from '../images/github.png';\nimport linkedin from '../images/linkedin.png';\n\nclass Footer extends Component {\n  render() {\n    return (\n      <footer>\n        <p>\n          Desenvolvido por\n          <b>Fábio Augusto Mazuchi</b>\n        </p>\n        <div className=\"links\">\n          <Link target=\"_blank\" to=\"https://github.com/FabioMazuchi\">\n            <img src={ github } alt=\"link para github\" />\n          </Link>\n          <Link target=\"_blank\" to=\"https://www.linkedin.com/in/fabio-augusto-mazuchi/\">\n            <img src={ linkedin } alt=\"link para linkedin\" />\n          </Link>\n          <h4>mazuchi.augusto@hotmail.com</h4>\n        </div>\n      </footer>\n    );\n  }\n}\n\nexport default Footer;\n","const INITIAL_STATE = {\n  respostas: [],\n  timeLeft: 30,\n  timeOver: false,\n  indice: 0,\n  dificuldade: '',\n  pontuacao: 0,\n  acertou: false,\n  errou: false,\n  mostrarBotaoNext: false,\n  proximaPergunta: 0,\n  showFeedback: false,\n  total: 0,\n};\n\nexport default INITIAL_STATE;\n","export const REQUEST_TOKEN = 'REQUEST_TOKEN';\nexport const GET_TOKEN = 'GET_TOKEN';\nexport const REQUEST_PERGUNTAS = 'REQUEST_PERGUNTAS';\nexport const GET_PERGUNTAS = 'GET_PERGUNTAS';\nexport const FAILED_REQUEST = 'FAILED_REQUEST';\nexport const GET_EMAIL_NOME = 'GET_EMAIL_NOME';\nexport const UPDATE_POINTS = 'UPDATE_POINTS';\nexport const ZERA_ACERTOS = 'ZERA_ACERTOS';\n\nexport function requestPerguntas() {\n  return { type: REQUEST_PERGUNTAS };\n}\n\nexport function getPerguntas(json) {\n  return { type: GET_PERGUNTAS, payload: json };\n}\n\nexport function getEmailNome(state) {\n  return { type: GET_EMAIL_NOME, payload: state };\n}\n\nexport function requestToken() {\n  return { type: REQUEST_TOKEN };\n}\n\nfunction getToken(json) {\n  return { type: GET_TOKEN, payload: json };\n}\n\nexport function updatePoints(payload) {\n  return { type: UPDATE_POINTS, payload };\n}\n\nexport function zeraAcertos() {\n  return { type: ZERA_ACERTOS };\n}\n\nconst NUMBER = 3;\n\nexport function fetchToken() {\n  return async (dispatch) => {\n    dispatch(requestToken());\n    const response = await fetch('https://opentdb.com/api_token.php?command=request');\n    const json = await response.json();\n    dispatch(getToken(json));\n  };\n}\n\nexport function fetchPerguntas(token) {\n  return async (dispatch) => {\n    dispatch(requestPerguntas());\n    const response = await fetch(`https://opentdb.com/api.php?amount=5&token=${token}`);\n    const json = await response.json();\n    if (json.response_code === NUMBER) {\n      const response1 = await fetch('https://opentdb.com/api_token.php?command=request');\n      const json1 = await response1.json();\n      const res1 = await fetch(`https://opentdb.com/api.php?amount=5&token=${json1.token}`);\n      const final = await res1.json();\n      dispatch(getPerguntas(final));\n    } else {\n      dispatch(getPerguntas(json));\n    }\n  };\n}\n","import React, { Component } from 'react';\nimport md5 from 'crypto-js/md5';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\n\nclass Header extends Component {\n  constructor() {\n    super();\n    this.state = {\n      url: '',\n    };\n    this.convertEmail = this.convertEmail.bind(this);\n  }\n\n  componentDidMount() {\n    this.convertEmail();\n  }\n\n  convertEmail() {\n    const { email } = this.props;\n    const hash = md5(email).toString();\n    const url = `https://www.gravatar.com/avatar/${hash}`;\n    this.setState({ url });\n  }\n\n  render() {\n    const { nome, pontuacao } = this.props;\n    const { url } = this.state;\n    return (\n      <header>\n        <div>\n          <img\n            data-testid=\"header-profile-picture\"\n            src={ url }\n            alt={ nome }\n          />\n          <span data-testid=\"header-player-name\">{nome}</span>\n        </div>\n        <span className=\"score\" data-testid=\"header-score\">\n          Score:\n          { pontuacao }\n        </span>\n      </header>\n    );\n  }\n}\n\nHeader.propTypes = {\n  nome: PropTypes.string.isRequired,\n  email: PropTypes.string.isRequired,\n  pontuacao: PropTypes.string.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  nome: state.player.name,\n  email: state.player.gravatarEmail,\n  pontuacao: state.player.score,\n});\n\nexport default connect(mapStateToProps)(Header);\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nclass Perguntas extends Component {\n  render() {\n    const { respostas, timeOver, acerto, setRespTrue, erro, setRespFalse } = this.props;\n    return (\n      <ul data-testid=\"answer-options\">\n        {respostas.map((resp, i) => {\n          const keys = Object.keys(resp);\n          const values = Object.values(resp);\n          if (keys[0] === 'correct_answer') {\n            return (\n              <button\n                className={ acerto() }\n                onClick={ setRespTrue }\n                key={ i }\n                type=\"button\"\n                data-testid=\"correct-answer\"\n                disabled={ timeOver }\n              >\n                {values[0]\n                  .replace(/&quot/g, '')\n                  .replace(/&#039/g, '')\n                  .replace(/&eacute;/g)\n                  .replace(/;/g, '')}\n              </button>\n            );\n          }\n          return (\n            <button\n              className={ erro() }\n              onClick={ setRespFalse }\n              key={ i }\n              type=\"button\"\n              data-testid={ `wrong-answer-${values[1]}` }\n              disabled={ timeOver }\n            >\n              {values[0]\n                .replace(/&quot/g, '')\n                .replace(/&#039/g, '')\n                .replace(/&eacute;/g)\n                .replace(/;/g, '')}\n            </button>\n          );\n        })}\n      </ul>\n    );\n  }\n}\n\nPerguntas.propTypes = {\n  respostas: PropTypes.arrayOf.isRequired,\n  timeOver: PropTypes.number.isRequired,\n  acerto: PropTypes.func.isRequired,\n  erro: PropTypes.func.isRequired,\n  setRespFalse: PropTypes.func.isRequired,\n  setRespTrue: PropTypes.func.isRequired,\n};\n\nexport default Perguntas;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport INITIAL_STATE from '../data';\nimport { fetchPerguntas, updatePoints } from '../redux/actions';\nimport Header from './Header';\nimport Perguntas from './Perguntas';\n\nconst NUMBER = 0.5;\nconst NUMBER_3 = 3;\nconst NUMBER_1000 = 1000;\nconst NUMBER_10 = 10;\nconst NUMBER_5 = 5;\n\nclass Jogo extends Component {\n  constructor() {\n    super();\n    this.state = INITIAL_STATE;\n  }\n\n  async componentDidMount() {\n    const { proximaPergunta } = this.state;\n    await this.buscarPerguntas();\n    this.arrayRespostas(proximaPergunta);\n    this.timerFunction();\n    this.defineDificuldade();\n  }\n\n  componentDidUpdate(_prevProps, prevState) {\n    const { updatePontuacao } = this.props;\n    const { pontuacao } = this.state;\n    if (pontuacao !== prevState.pontuacao) {\n      updatePontuacao(pontuacao);\n    }\n    if (prevState.proximaPergunta === NUMBER_5) {\n      this.exibirFeedback();\n    }\n  }\n\n  setRespTrue = () => {\n    const { dificuldade, timeLeft } = this.state;\n    let difficultyNumber;\n    if (dificuldade === 'easy') {\n      difficultyNumber = 1;\n    }\n    if (dificuldade === 'medium') {\n      difficultyNumber = 2;\n    } else {\n      difficultyNumber = NUMBER_3;\n    }\n    const calc = NUMBER_10 + timeLeft * difficultyNumber;\n    this.setState({\n      acertou: true,\n      errou: false,\n      pontuacao: calc,\n      mostrarBotaoNext: true,\n    });\n  };\n\n  setRespFalse = () => {\n    this.setState({ acertou: false, errou: true, mostrarBotaoNext: true });\n  };\n\n  buscarPerguntas = async () => {\n    const { token, getPerguntas } = this.props;\n    localStorage.setItem('token', JSON.stringify(token));\n    await getPerguntas(token);\n  };\n\n  defineDificuldade = () => {\n    const { indice } = this.state;\n    const { perguntas } = this.props;\n    this.setState({\n      dificuldade: perguntas[indice].difficulty,\n    });\n  };\n\n  arrayTrueFalse = (index) => {\n    const { perguntas } = this.props;\n    const accPergunts = [];\n    const res = [0, 1];\n    let list = [0, 1];\n    accPergunts.push({ correct_answer: perguntas[index].correct_answer });\n    perguntas[index].incorrect_answers.forEach((incorrect, pos) => {\n      accPergunts.push({ incorrect_answers: incorrect, pos });\n    });\n    list = list.sort(() => Math.random() - NUMBER);\n    accPergunts.forEach((element, i) => {\n      res.splice([list[i]], 1, element);\n    });\n    this.setState({ respostas: res });\n  };\n\n  arrayRespostas = (index) => {\n    const { perguntas } = this.props;\n    if (perguntas[index].type !== 'multiple') {\n      this.arrayTrueFalse(index);\n    } else {\n      const accPergunts = [];\n      const res = [0, 1, 2, NUMBER_3];\n      let list = [0, 1, 2, NUMBER_3];\n      accPergunts.push({ correct_answer: perguntas[index].correct_answer });\n      perguntas[index].incorrect_answers.forEach((incorrect, pos) => {\n        accPergunts.push({ incorrect_answers: incorrect, pos });\n      });\n      list = list.sort(() => Math.random() - NUMBER);\n      accPergunts.forEach((element, i) => {\n        res.splice([list[i]], 1, element);\n      });\n      this.setState({ respostas: res });\n    }\n  };\n\n  timerFunction = () => {\n    this.myInterval = setInterval(() => {\n      const { timeLeft } = this.state;\n      if (timeLeft > 0) {\n        this.setState((prev) => ({\n          timeLeft: prev.timeLeft - 1,\n        }));\n      }\n      if (timeLeft === 0) {\n        clearInterval(this.myInterval);\n        this.setState({ timeOver: true });\n      }\n    }, NUMBER_1000);\n  };\n\n  correctAnswer = () => {\n    const { difficulty, timeLeft } = this.state;\n    let difficultyNumber;\n    if (difficulty === 'easy') {\n      difficultyNumber = 1;\n    }\n    if (difficulty === 'medium') {\n      difficultyNumber = 2;\n    } else {\n      difficultyNumber = NUMBER_3;\n    }\n    const calc = NUMBER_10 + timeLeft * difficultyNumber;\n    this.setState((prevState) => ({\n      pontuacao: prevState.pontuacao + calc,\n    }));\n  };\n\n  adicionaClasseAcerto = () => {\n    const { acertou, errou } = this.state;\n    if (acertou || errou) return 'acertou';\n  };\n\n  adicionaClasseErro = () => {\n    const { acertou, errou } = this.state;\n    if (acertou || errou) return 'errou';\n  };\n\n  nextQuestion = () => {\n    const { proximaPergunta } = this.state;\n    this.setState(\n      (prevsate) => ({\n        proximaPergunta: prevsate.proximaPergunta + 1,\n        errou: false,\n        acertou: false,\n        mostrarBotaoNext: false,\n        timeLeft: 30,\n      }),\n      () => this.arrayRespostas(proximaPergunta),\n    );\n  };\n\n  exibirFeedback = () => {\n    const { history } = this.props;\n    history.push('/feed');\n  };\n\n  render() {\n    const { perguntas } = this.props;\n    const { respostas, timeLeft, timeOver } = this.state;\n    const { mostrarBotaoNext, proximaPergunta } = this.state;\n    if (!perguntas) return <h2>Loading...</h2>;\n    return (\n      <section>\n        <Header />\n        <div className=\"jogo\">\n          <section>\n            {proximaPergunta !== NUMBER_5 && (\n              <>\n                <div className=\"topo\">\n                  <span>{timeLeft}</span>\n                  <h3 data-testid=\"question-category\">\n                    {perguntas[proximaPergunta].category}\n                  </h3>\n                </div>\n                <p data-testid=\"question-text\">\n                  {perguntas[proximaPergunta].question\n                    .replace(/&quot/g, '')\n                    .replace(/&#039/g, '')\n                    .replace(/&eacute;/g)\n                    .replace(/;/g, '')}\n                </p>\n                <Perguntas\n                  respostas={ respostas }\n                  timeOver={ timeOver }\n                  acerto={ this.adicionaClasseAcerto }\n                  setRespTrue={ this.setRespTrue }\n                  erro={ this.adicionaClasseErro }\n                  setRespFalse={ this.setRespFalse }\n                />\n                {mostrarBotaoNext && (\n                  <button\n                    className=\"next\"\n                    data-testid=\"btn-next\"\n                    type=\"button\"\n                    onClick={ this.nextQuestion }\n                  >\n                    Next\n                  </button>\n                )}\n              </>\n            )}\n          </section>\n        </div>\n      </section>\n    );\n  }\n}\n\nJogo.propTypes = {\n  token: PropTypes.string.isRequired,\n  getPerguntas: PropTypes.func.isRequired,\n  perguntas: PropTypes.arrayOf.isRequired,\n  updatePontuacao: PropTypes.string.isRequired,\n  history: PropTypes.objectOf.isRequired,\n};\n\nconst mapDispatchToProps = (dispatch) => ({\n  getPerguntas: (token) => dispatch(fetchPerguntas(token)),\n  updatePontuacao: (pontuacao) => dispatch(updatePoints(pontuacao)),\n});\n\nconst mapStateToProps = (state) => ({\n  token: state.token,\n  perguntas: state.perguntas.response.results,\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Jogo);\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { fetchToken, getEmailNome, fetchPerguntas, zeraAcertos } from '../redux/actions';\n\nclass LoginScreen extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      name: '',\n      email: '',\n    };\n    this.logar = this.logar.bind(this);\n  }\n\n  componentWillUnmount() {\n    const { zerarAcertos } = this.props;\n    this.buscarPerguntas();\n    zerarAcertos();\n  }\n\n  handleChange = ({ target }) => {\n    const { name, value } = target;\n    this.setState({ [name]: value });\n  };\n\n  loginVerifiyer = () => {\n    const { email, name } = this.state;\n    const includesAt = email.includes('@');\n    const includesCom = email.includes('.com');\n    const NAME_LENGTH = 3;\n    const verifyName = name.length >= NAME_LENGTH;\n    const isButtonDisable = !(includesAt && includesCom && verifyName);\n    return isButtonDisable;\n  };\n\n  async buscarPerguntas() {\n    const { token, getPerguntas } = this.props;\n    localStorage.setItem('token', JSON.stringify(token));\n    await getPerguntas(token);\n  }\n\n  async logar() {\n    const { getToken, history, getEmailName } = this.props;\n    await getToken();\n    getEmailName(this.state);\n    history.push('/jogo');\n  }\n\n  render() {\n    const { name, email } = this.state;\n    return (\n      <section className=\"App-header\">\n        {/* <img src={ logo } className=\"App-logo\" alt=\"logo\" /> */}\n        <h1 className=\"App-logo\">\n          Quizz\n          <span>?</span>\n        </h1>\n        <form>\n          <input\n            type=\"text\"\n            name=\"name\"\n            value={ name }\n            data-testid=\"input-player-name\"\n            placeholder=\"Nome\"\n            onChange={ this.handleChange }\n          />\n          <input\n            type=\"email\"\n            name=\"email\"\n            value={ email }\n            data-testid=\"input-gravatar-email\"\n            placeholder=\"Email\"\n            onChange={ this.handleChange }\n          />\n          <button\n            type=\"button\"\n            disabled={ this.loginVerifiyer() }\n            data-testid=\"btn-play\"\n            onClick={ this.logar }\n          >\n            Play!\n          </button>\n        </form>\n      </section>\n    );\n  }\n}\n\nLoginScreen.propTypes = {\n  getToken: PropTypes.func.isRequired,\n  history: PropTypes.objectOf.isRequired,\n  getEmailName: PropTypes.func.isRequired,\n  token: PropTypes.string.isRequired,\n  getPerguntas: PropTypes.func.isRequired,\n  zerarAcertos: PropTypes.func.isRequired,\n};\n\nconst mapDispatchToProps = (dispatch) => ({\n  getToken: () => dispatch(fetchToken()),\n  getEmailName: (state) => dispatch(getEmailNome(state)),\n  getPerguntas: (token) => dispatch(fetchPerguntas(token)),\n  zerarAcertos: () => dispatch(zeraAcertos()),\n});\n\nconst mapStateToProps = (state) => ({\n  token: state.token.token,\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(LoginScreen);\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\n\nclass Ranking extends Component {\n  render() {\n    return (\n      <section>\n        <h1 data-testid=\"ranking-title\">Ranking</h1>\n        <Link className=\"config\" data-testid=\"btn-go-home\" to=\"/\">\n          Home\n        </Link>\n      </section>\n    );\n  }\n}\n\nexport default Ranking;\n","import React from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport './App.css';\nimport Configuracao from './components/Configuracao';\nimport Feedback from './components/Feedback';\nimport Footer from './components/Footer';\nimport Jogo from './components/Jogo';\nimport LoginScreen from './components/LoginScreen';\nimport Ranking from './components/Ranking';\n\nexport default function App() {\n  return (\n    <div className=\"App\">\n      <Switch>\n        <Route path=\"/jogo\" component={ Jogo } />\n        <Route path=\"/feed\" component={ Feedback } />\n        <Route path=\"/ranking\" component={ Ranking } />\n        <Route path=\"/config\" component={ Configuracao } />\n        <Route path=\"/\" component={ LoginScreen } />\n      </Switch>\n      <Footer />\n    </div>\n  );\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { GET_EMAIL_NOME, UPDATE_POINTS, ZERA_ACERTOS } from '../actions';\n\nconst INITIAL_STATE = {\n  name: '',\n  assertions: 0,\n  score: 0,\n  gravatarEmail: '',\n};\n\nconst player = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n  case GET_EMAIL_NOME:\n    return {\n      ...state,\n      name: action.payload.name,\n      gravatarEmail: action.payload.email,\n    };\n  case UPDATE_POINTS:\n    return {\n      ...state,\n      score: action.payload,\n      assertions: state.assertions + 1,\n    };\n  case ZERA_ACERTOS:\n    return { ...state, assertions: 0 };\n  default:\n    return state;\n  }\n};\n\nexport default player;\n","import { REQUEST_TOKEN, GET_TOKEN, FAILED_REQUEST } from '../actions';\n\nconst INITIAL_STATE = {\n  token: '',\n};\n\nconst token = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n  case REQUEST_TOKEN:\n    return { ...state };\n  case GET_TOKEN:\n    return action.payload.token;\n  case FAILED_REQUEST:\n    return { ...state };\n  default:\n    return state;\n  }\n};\n\nexport default token;\n","import { REQUEST_PERGUNTAS, GET_PERGUNTAS, FAILED_REQUEST } from '../actions';\n\nconst INITIAL_STATE = {\n  response: {},\n};\n\nconst perguntas = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n  case REQUEST_PERGUNTAS:\n    return { ...state };\n  case GET_PERGUNTAS:\n    return { ...state, response: action.payload };\n  case FAILED_REQUEST:\n    return { ...state, response: action.payload };\n  default:\n    return state;\n  }\n};\n\nexport default perguntas;\n","import player from './player';\nimport token from './token';\nimport perguntas from './perguntas';\n\nconst { combineReducers } = require('redux');\n\nconst rootReducer = combineReducers({\n  player,\n  token,\n  perguntas,\n});\n\nexport default rootReducer;\n","import { createStore, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport rootReducer from '../reducers';\n\nconst store = createStore(\n  rootReducer,\n  composeWithDevTools(applyMiddleware(thunk)),\n);\n\nif (window.Cypress) {\n  window.store = store;\n}\n\nexport default store;\n","import React from 'react';\nimport { Provider } from 'react-redux';\nimport { BrowserRouter } from 'react-router-dom';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport store from './redux/store';\n\nReactDOM.render(\n  <BrowserRouter>\n    <Provider store={ store }>\n      <App />\n    </Provider>\n  </BrowserRouter>,\n  document.getElementById('root'),\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}